{"ast":null,"code":"import { Constants } from \"../constants/authConstance\";\nexport const NotesReducer = (state = [], action) => {\n  switch (action.type) {\n    case Constants.IS_AUTH:\n      if (action.payload) {\n        return state = action.payload;\n      }\n\n      return state;\n\n    case Constants.LOG_IN:\n      localStorage.setItem('userData', JSON.stringify(action.payload));\n      return { ...state,\n        Token: action.payload.token,\n        UserID: action.payload.userID,\n        LoggedIn: true\n      };\n\n    case Constants.LOG_OUT:\n      localStorage.setItem(\"userData\", null);\n      return { ...state,\n        Token: null,\n        UserID: null,\n        LoggedIn: false\n      };\n\n    default:\n      return state;\n  }\n};\n_c = NotesReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotesReducer\");","map":{"version":3,"sources":["S:/WebDevelopment/OnlineNotepad/frontend/src/redux/reducers/notesReducers.js"],"names":["Constants","NotesReducer","state","action","type","IS_AUTH","payload","LOG_IN","localStorage","setItem","JSON","stringify","Token","token","UserID","userID","LoggedIn","LOG_OUT"],"mappings":"AACA,SAAQA,SAAR,QAAwB,4BAAxB;AAGA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAChD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKJ,SAAS,CAACK,OAAf;AACI,UAAIF,MAAM,CAACG,OAAX,EAAoB;AAChB,eAAOJ,KAAK,GAAGC,MAAM,CAACG,OAAtB;AACH;;AACD,aAAOJ,KAAP;;AACJ,SAAKF,SAAS,CAACO,MAAf;AACIC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeR,MAAM,CAACG,OAAtB,CAAjC;AACA,aAAO,EACH,GAAGJ,KADA;AAEHU,QAAAA,KAAK,EAAET,MAAM,CAACG,OAAP,CAAeO,KAFnB;AAGHC,QAAAA,MAAM,EAAEX,MAAM,CAACG,OAAP,CAAeS,MAHpB;AAIHC,QAAAA,QAAQ,EAAE;AAJP,OAAP;;AAMJ,SAAKhB,SAAS,CAACiB,OAAf;AACIT,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,IAAjC;AACA,aAAO,EACH,GAAGP,KADA;AAEHU,QAAAA,KAAK,EAAE,IAFJ;AAGHE,QAAAA,MAAM,EAAE,IAHL;AAIHE,QAAAA,QAAQ,EAAE;AAJP,OAAP;;AAOJ;AACI,aAAOd,KAAP;AAzBR;AA2BH,CA5BM;KAAMD,Y","sourcesContent":["\r\nimport {Constants} from \"../constants/authConstance\"\r\n\r\n\r\nexport const NotesReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n\r\n        case Constants.IS_AUTH:\r\n            if (action.payload) {\r\n                return state = action.payload\r\n            }\r\n            return state\r\n        case Constants.LOG_IN:\r\n            localStorage.setItem('userData', JSON.stringify(action.payload))\r\n            return {\r\n                ...state,\r\n                Token: action.payload.token,\r\n                UserID: action.payload.userID,\r\n                LoggedIn: true\r\n            }\r\n        case Constants.LOG_OUT:\r\n            localStorage.setItem(\"userData\", null)\r\n            return {\r\n                ...state,\r\n                Token: null,\r\n                UserID: null,\r\n                LoggedIn: false\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}