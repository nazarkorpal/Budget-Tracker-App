{"ast":null,"code":"var _jsxFileName = \"S:\\\\WebDevelopment\\\\BudgetTracker\\\\frontend\\\\src\\\\page\\\\Content\\\\Registration\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport styles from \"./RegLog.module.css\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register(props) {\n  _s();\n\n  const [form, setForm] = useState({\n    email: \"\",\n    username: \"\",\n    password: \"\"\n  });\n\n  const updateForm = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const reg = async () => {\n    const body = JSON.stringify(form);\n    axios.post(\"/api/auth/register\", body, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.data.status === \"201\") {\n        window.M.toast({\n          html: res.data.message,\n          classes: \"rounded\"\n        });\n        setForm({\n          username: \"\",\n          email: \"\",\n          password: \"\"\n        });\n        setTimeout(() => {\n          window.location.assign('/login');\n        }, 1500);\n      } else if (res.data.status === \"errors\") {\n        for (let key of res.data.errors.errors) {\n          window.M.toast({\n            html: key.msg,\n            classes: \"rounded\"\n          });\n        }\n      } else {\n        window.M.toast({\n          html: res.data.message,\n          classes: \"rounded\"\n        });\n        throw new Error(res.data.status);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please fill in this form to create an account.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: form.username,\n          placeholder: \"Enter Username\",\n          name: \"username\",\n          id: \"username\",\n          required: true,\n          onChange: updateForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: form.email,\n          placeholder: \"Enter Email\",\n          name: \"email\",\n          id: \"email\",\n          required: true,\n          onChange: updateForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"psw\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: form.password,\n          placeholder: \"Enter Password\",\n          name: \"password\",\n          id: \"password\",\n          required: true,\n          onChange: updateForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: reg,\n            className: styles.registerbtn,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"34UYw1eLubWPNu1MY5cht0XjPHU=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["S:/WebDevelopment/BudgetTracker/frontend/src/page/Content/Registration/Register.jsx"],"names":["styles","useState","axios","Register","props","form","setForm","email","username","password","updateForm","event","target","name","value","reg","body","JSON","stringify","post","headers","then","res","data","status","window","M","toast","html","message","classes","setTimeout","location","assign","key","errors","msg","Error","catch","err","console","log","wrapper","registerbtn"],"mappings":"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","sourcesContent":["import styles from \"./RegLog.module.css\"\r\nimport {useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction Register(props) {\r\n    const [form, setForm] = useState({email: \"\", username: \"\", password: \"\"})\r\n    const updateForm = (event) => {\r\n        setForm({...form, [event.target.name]: event.target.value})\r\n    }\r\n    const reg = async () => {\r\n\r\n        const body = JSON.stringify(form)\r\n        axios.post(\"/api/auth/register\", body, {headers: {\"Content-Type\": \"application/json\"}})\r\n            .then(res => {\r\n                if (res.data.status === \"201\") {\r\n                    window.M.toast({html: res.data.message, classes: \"rounded\"})\r\n                    setForm({username: \"\", email: \"\", password: \"\"})\r\n                    setTimeout(() => {\r\n                        window.location.assign('/login')\r\n                    }, 1500)\r\n                } else if(res.data.status === \"errors\"){\r\n                    for (let key of res.data.errors.errors){\r\n                        window.M.toast({html: key.msg, classes: \"rounded\"})\r\n                    }\r\n                }\r\n                 else {\r\n                    window.M.toast({html: res.data.message, classes: \"rounded\"})\r\n                    throw new Error(res.data.status)\r\n                }\r\n            }).catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className=\"container\">\r\n                <h1>Register</h1>\r\n                <p>Please fill in this form to create an account.</p>\r\n                <div>\r\n                    <label htmlFor=\"email\"><b>Username</b></label>\r\n                    <input type=\"text\" value={form.username} placeholder=\"Enter Username\" name=\"username\" id=\"username\"\r\n                           required\r\n                           onChange={updateForm}/>\r\n\r\n                    <label htmlFor=\"email\"><b>Email</b></label>\r\n                    <input type=\"text\" value={form.email} placeholder=\"Enter Email\" name=\"email\" id=\"email\" required\r\n                           onChange={updateForm}/>\r\n\r\n                    <label htmlFor=\"psw\"><b>Password</b></label>\r\n                    <input type=\"password\" value={form.password} placeholder=\"Enter Password\" name=\"password\"\r\n                           id=\"password\" required\r\n                           onChange={updateForm}/>\r\n\r\n                    <div>\r\n                        <button type=\"submit\" onClick={reg} className={styles.registerbtn}>Register</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register"]},"metadata":{},"sourceType":"module"}