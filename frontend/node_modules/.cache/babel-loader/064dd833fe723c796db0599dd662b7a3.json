{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from \"react\";\nconst storageName = \"userData\";\nexport const useAuth = () => {\n  _s();\n\n  const {\n    token,\n    setToken\n  } = useState(null);\n  const {\n    userID,\n    setUserID\n  } = useState(null);\n  const login = useCallback((jwtToken, id) => {\n    setToken(jwtToken);\n    setUserID(id);\n    localStorage.setItem(storageName, JSON.stringify({\n      token: jwtToken,\n      userID: id\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserID(null);\n    localStorage.removeItem(storageName);\n  }, []);\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(storageName));\n\n    if (data && data.token) {\n      login(data.token, data.userID);\n    }\n  }, [login]);\n  return {\n    token,\n    userID,\n    login,\n    logout\n  };\n};\n\n_s(useAuth, \"x0hFnGyec8UsV00GXDC34mQV/X8=\");","map":{"version":3,"sources":["S:/WebDevelopment/OnlineNotepad/frontend/src/hooks/authHook.js"],"names":["useState","useEffect","useCallback","storageName","useAuth","token","setToken","userID","setUserID","login","jwtToken","id","localStorage","setItem","JSON","stringify","logout","removeItem","data","parse","getItem"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,WAA7B,QAA+C,OAA/C;AAEA,MAAMC,WAAW,GAAG,UAApB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAACO,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAsBR,QAAQ,CAAC,IAAD,CAApC;AAEA,QAAMS,KAAK,GAAGP,WAAW,CAAC,CAACQ,QAAD,EAAWC,EAAX,KAAgB;AACtCL,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACAF,IAAAA,SAAS,CAACG,EAAD,CAAT;AAEAC,IAAAA,YAAY,CAACC,OAAb,CAAqBV,WAArB,EAAkCW,IAAI,CAACC,SAAL,CAAe;AAACV,MAAAA,KAAK,EAAEK,QAAR;AAAkBH,MAAAA,MAAM,EAAEI;AAA1B,KAAf,CAAlC;AACH,GALwB,EAKtB,EALsB,CAAzB;AAMA,QAAMK,MAAM,GAAGd,WAAW,CAAC,MAAI;AAC3BI,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAI,IAAAA,YAAY,CAACK,UAAb,CAAwBd,WAAxB;AACH,GAJyB,EAIvB,EAJuB,CAA1B;AAKAF,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMiB,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAWP,YAAY,CAACQ,OAAb,CAAqBjB,WAArB,CAAX,CAAb;;AACA,QAAGe,IAAI,IAAIA,IAAI,CAACb,KAAhB,EAAsB;AAClBI,MAAAA,KAAK,CAACS,IAAI,CAACb,KAAN,EAAaa,IAAI,CAACX,MAAlB,CAAL;AACH;AACJ,GALQ,EAKN,CAACE,KAAD,CALM,CAAT;AAOA,SAAO;AAACJ,IAAAA,KAAD;AAAQE,IAAAA,MAAR;AAAgBE,IAAAA,KAAhB;AAAuBO,IAAAA;AAAvB,GAAP;AAEH,CAxBM;;GAAMZ,O","sourcesContent":["import {useState, useEffect, useCallback} from \"react\"\r\n\r\nconst storageName = \"userData\"\r\n\r\nexport const useAuth = () => {\r\n    const {token, setToken} = useState(null)\r\n    const {userID, setUserID} = useState(null)\r\n\r\n    const login = useCallback((jwtToken, id)=>{\r\n        setToken(jwtToken)\r\n        setUserID(id)\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({token: jwtToken, userID: id}))\r\n    }, [])\r\n    const logout = useCallback(()=>{\r\n        setToken(null)\r\n        setUserID(null)\r\n        localStorage.removeItem(storageName)\r\n    }, [])\r\n    useEffect(()=>{\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n        if(data && data.token){\r\n            login(data.token, data.userID)\r\n        }\r\n    }, [login])\r\n\r\n    return {token, userID, login, logout}\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}