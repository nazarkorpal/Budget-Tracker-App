{"ast":null,"code":"import { Constants } from \"../constants/authConstance\";\nimport axios from \"axios\";\nexport const loadNotes = inf => async dispatch => {\n  try {\n    console.log(inf.token);\n    const {\n      data\n    } = await axios.post(\"/api/note/load\", {\n      headers: {\n        Authorization: `Bearer ${inf.token}`\n      }\n    });\n    dispatch({\n      type: Constants.LOAD_NOTES,\n      payload: data\n    });\n  } catch (e) {\n    console.log(e.message);\n  }\n};\nexport const createNote = info => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/note/create\", info, {\n      headers: {\n        Authorization: `Bearer ${info.token}`\n      }\n    });\n    dispatch({\n      type: Constants.CREATE_NOTE,\n      payload: data\n    });\n    window.M.toast({\n      html: \"Note successfully created\",\n      classes: \"rounded\"\n    });\n  } catch (e) {\n    window.M.toast({\n      html: \"Note`s name must contain at least 4 characters or note already exist\",\n      classes: \"rounded\"\n    });\n  }\n};","map":{"version":3,"sources":["S:/WebDevelopment/OnlineNotepad/frontend/src/redux/actions/actionCreator.js"],"names":["Constants","axios","loadNotes","inf","dispatch","console","log","token","data","post","headers","Authorization","type","LOAD_NOTES","payload","e","message","createNote","info","CREATE_NOTE","window","M","toast","html","classes"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,SAAS,GAAIC,GAAD,IAAS,MAAOC,QAAP,IAAkB;AAChD,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,KAAhB;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMP,KAAK,CAACQ,IAAN,CAAW,gBAAX,EAA6B;AAACC,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAI,UAASR,GAAG,CAACI,KAAM;AAArC;AAAV,KAA7B,CAArB;AACAH,IAAAA,QAAQ,CAAC;AAACQ,MAAAA,IAAI,EAAEZ,SAAS,CAACa,UAAjB;AAA6BC,MAAAA,OAAO,EAAEN;AAAtC,KAAD,CAAR;AACH,GAJD,CAIC,OAAOO,CAAP,EAAU;AACPV,IAAAA,OAAO,CAACC,GAAR,CAAYS,CAAC,CAACC,OAAd;AACH;AACJ,CARM;AAUP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU,MAAOd,QAAP,IAAkB;AAClD,MAAI;AACA,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMP,KAAK,CAACQ,IAAN,CAAW,kBAAX,EAA+BS,IAA/B,EAAqC;AAACR,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAI,UAASO,IAAI,CAACX,KAAM;AAAtC;AAAV,KAArC,CAArB;AACAH,IAAAA,QAAQ,CAAC;AAACQ,MAAAA,IAAI,EAAEZ,SAAS,CAACmB,WAAjB;AAA8BL,MAAAA,OAAO,EAAEN;AAAvC,KAAD,CAAR;AACAY,IAAAA,MAAM,CAACC,CAAP,CAASC,KAAT,CAAe;AAACC,MAAAA,IAAI,EAAE,2BAAP;AAAoCC,MAAAA,OAAO,EAAE;AAA7C,KAAf;AACH,GAJD,CAIC,OAAOT,CAAP,EAAU;AACPK,IAAAA,MAAM,CAACC,CAAP,CAASC,KAAT,CAAe;AAACC,MAAAA,IAAI,EAAE,sEAAP;AAA+EC,MAAAA,OAAO,EAAE;AAAxF,KAAf;AACH;AACJ,CARM","sourcesContent":["import {Constants} from \"../constants/authConstance\"\r\nimport axios from \"axios\";\r\nexport const loadNotes = (inf) => async (dispatch)=>{\r\n    try {\r\n        console.log(inf.token)\r\n        const {data} = await axios.post(\"/api/note/load\", {headers: {Authorization : `Bearer ${inf.token}`}})\r\n        dispatch({type: Constants.LOAD_NOTES, payload: data})\r\n    }catch (e) {\r\n        console.log(e.message)\r\n    }\r\n}\r\n\r\nexport const createNote = (info) => async (dispatch)=>{\r\n    try {\r\n        const {data} = await axios.post(\"/api/note/create\", info, {headers: {Authorization : `Bearer ${info.token}`}})\r\n        dispatch({type: Constants.CREATE_NOTE, payload: data})\r\n        window.M.toast({html: \"Note successfully created\", classes: \"rounded\"})\r\n    }catch (e) {\r\n        window.M.toast({html: \"Note`s name must contain at least 4 characters or note already exist\", classes: \"rounded\"})\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}