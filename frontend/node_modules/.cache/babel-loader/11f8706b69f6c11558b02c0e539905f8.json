{"ast":null,"code":"import { Constants } from \"../constants/authConstance\";\nimport axios from \"axios\";\nexport const loadNotes = ({\n  token\n}) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/note/load\", {\n      headers: {\n        Authorization: `Bearer ${token.token}`\n      }\n    });\n    dispatch({\n      type: Constants.LOAD_NOTES,\n      payload: data\n    });\n  } catch (e) {\n    console.log(e.message);\n  }\n};\nexport const createNote = info => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/note/create\", info, {\n      headers: {\n        Authorization: `Bearer ${info.token}`\n      }\n    });\n    dispatch({\n      type: Constants.CREATE_NOTE,\n      payload: data\n    });\n    window.M.toast({\n      html: \"Note successfully created\",\n      classes: \"rounded\"\n    });\n  } catch (e) {\n    window.M.toast({\n      html: \"Note`s name must contain at least 4 characters or note already exist\",\n      classes: \"rounded\"\n    });\n  }\n};","map":{"version":3,"sources":["S:/WebDevelopment/OnlineNotepad/frontend/src/redux/actions/actionCreator.js"],"names":["Constants","axios","loadNotes","token","dispatch","data","post","headers","Authorization","type","LOAD_NOTES","payload","e","console","log","message","createNote","info","CREATE_NOTE","window","M","toast","html","classes"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa,MAAOC,QAAP,IAAkB;AACpD,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMJ,KAAK,CAACK,IAAN,CAAW,gBAAX,EAA6B;AAACC,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAI,UAASL,KAAK,CAACA,KAAM;AAAvC;AAAV,KAA7B,CAArB;AACAC,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAET,SAAS,CAACU,UAAjB;AAA6BC,MAAAA,OAAO,EAAEN;AAAtC,KAAD,CAAR;AACH,GAHD,CAGC,OAAOO,CAAP,EAAU;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;AACH;AACJ,CAPM;AASP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU,MAAOb,QAAP,IAAkB;AAClD,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMJ,KAAK,CAACK,IAAN,CAAW,kBAAX,EAA+BW,IAA/B,EAAqC;AAACV,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAI,UAASS,IAAI,CAACd,KAAM;AAAtC;AAAV,KAArC,CAArB;AACAC,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAET,SAAS,CAACkB,WAAjB;AAA8BP,MAAAA,OAAO,EAAEN;AAAvC,KAAD,CAAR;AACAc,IAAAA,MAAM,CAACC,CAAP,CAASC,KAAT,CAAe;AAACC,MAAAA,IAAI,EAAE,2BAAP;AAAoCC,MAAAA,OAAO,EAAE;AAA7C,KAAf;AACH,GAJD,CAIC,OAAOX,CAAP,EAAU;AACPO,IAAAA,MAAM,CAACC,CAAP,CAASC,KAAT,CAAe;AAACC,MAAAA,IAAI,EAAE,sEAAP;AAA+EC,MAAAA,OAAO,EAAE;AAAxF,KAAf;AACH;AACJ,CARM","sourcesContent":["import {Constants} from \"../constants/authConstance\"\r\nimport axios from \"axios\";\r\nexport const loadNotes = ({token}) => async (dispatch)=>{\r\n    try {\r\n        const {data} = await axios.post(\"/api/note/load\", {headers: {Authorization : `Bearer ${token.token}`}})\r\n        dispatch({type: Constants.LOAD_NOTES, payload: data})\r\n    }catch (e) {\r\n        console.log(e.message)\r\n    }\r\n}\r\n\r\nexport const createNote = (info) => async (dispatch)=>{\r\n    try {\r\n        const {data} = await axios.post(\"/api/note/create\", info, {headers: {Authorization : `Bearer ${info.token}`}})\r\n        dispatch({type: Constants.CREATE_NOTE, payload: data})\r\n        window.M.toast({html: \"Note successfully created\", classes: \"rounded\"})\r\n    }catch (e) {\r\n        window.M.toast({html: \"Note`s name must contain at least 4 characters or note already exist\", classes: \"rounded\"})\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}